{"version":3,"sources":["services/phonebook.js","components/PersonForm.js","components/Filter.js","components/Notification.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","error","post","catch","Error","id","put","delete","PersonForm","props","newName","newNumber","persons","setNewName","setNewNumber","setPersons","setErrorMessage","onSubmit","event","preventDefault","numberObject","name","number","checkContact","find","window","confirm","phoneService","returnedPhonebook","filter","person","concat","message","setTimeout","value","onChange","target","type","Filter","showAll","setShowAll","searchName","setSearchName","setSearchItemRegex","itemRegex","RegExp","Notification","className","Person","onClick","deleteContact","App","useState","loaded","setLoaded","useEffect","searchItemRegex","errorMessage","phonebookToShow","test","updatedPhonebook","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b48de1f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject,error) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data).catch(error => {\n    throw new Error(error.response.data.error)\n  })\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data).catch(error => {\n    throw new Error(error.response.data.error)\n  })\n}\n\nconst deleteIt = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deleteIt: deleteIt\n}\n","import React from 'react'\nimport phoneService from '../services/phonebook'\n\nconst PersonForm = (props) =>{\n  let newName = props.newName\n  let newNumber = props.newNumber\n  let persons = props.persons\n  let setNewName = props.setNewName\n  let setNewNumber = props.setNewNumber\n  let setPersons = props.setPersons\n  let setErrorMessage = props.setErrorMessage\n  const addNumber = (event) => {\n    event.preventDefault()\n    const numberObject = {\n      name: newName,\n      number: newNumber,\n    }\n    const checkContact = persons.find( ({name}) => name===newName)\n    if(!checkContact){\n      phoneService\n        .create(numberObject)\n        .then(returnedPhonebook => {\n          setPersons(persons.concat(returnedPhonebook))\n          setNewName('')\n          setNewNumber('')\n          setErrorMessage('New Contact has been added!')\n          setTimeout(() => setErrorMessage(null),5000)\n        }).catch(error => {\n          setErrorMessage(error.message)\n          setTimeout(() => setErrorMessage(null),5000)\n        })\n    }\n    else{\n      if(window.confirm(newName + ' is already added to phonebook. Due want to update the number?')){\n        phoneService\n          .update(checkContact.id, numberObject)\n          .then(returnedPhonebook => {\n            setPersons(persons.filter(person => person.id!==checkContact.id).concat(returnedPhonebook))\n          })\n          .catch(error => {\n            setErrorMessage(error.message)\n            setTimeout(() => setErrorMessage(null),5000)\n          })\n        setNewName('')\n        setNewNumber('')\n        setErrorMessage('Contact number has been updated!')\n        setTimeout(() => setErrorMessage(null),5000)\n      }\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return(\n      <form onSubmit = {addNumber}>\n        <div>Name: <input value={newName} onChange = {handleNameChange} /></div>\n        <div>Number: <input value={newNumber} onChange = {handleNumberChange} /></div>\n        <div><button type=\"submit\">Add</button></div>\n      </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = (props) => {\n  let showAll = props.showAll\n  let setShowAll = props.setShowAll\n  let searchName = props.searchName\n  let setSearchName = props.setSearchName\n  let setSearchItemRegex = props.setSearchItemRegex\n\n\n  const handleSearchName = (event) => {\n    let itemRegex = new RegExp('^'+event.target.value,'i')\n    setSearchItemRegex(itemRegex)\n    setSearchName(event.target.value)\n    if(event.target.value){\n      setShowAll(false)\n    }\n    else{\n      setShowAll(true)\n    }\n  }\n\n  return(\n    <div>\n      <h1> Show {showAll ? 'All' : 'Matched'} Items </h1>\n      <p>Search <input value={searchName} onChange = {handleSearchName} /></p>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({message, setErrorMessage}) => {\n  if (message)\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  else\n    return null\n}\n\nexport default Notification\n","import React, {useState, useEffect} from 'react'\n\n\nimport PersonForm from './PersonForm'\nimport Filter from './Filter'\nimport Notification from './Notification'\n\nimport phoneService from '../services/phonebook'\n\n\nconst Person = (props) => {\n  return(\n    <p>{props.name} {props.number}\n    <button onClick={()=> props.deleteContact(props.id, props.name)}>\n    Delete\n    </button>\n    </p>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState(null)\n  const [ loaded, setLoaded] = useState(false)\n  useEffect(()=>{\n    phoneService\n    .getAll()\n    .then(response => {\n      setPersons(response)\n      setLoaded(true)\n    })\n  },[])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n\n  const [showAll, setShowAll] = useState(true)\n  const [searchName, setSearchName] = useState('')\n  const [searchItemRegex, setSearchItemRegex] = useState('')\n\n  const [errorMessage, setErrorMessage] = useState()\n\n  const phonebookToShow = showAll ? persons : persons.filter(person =>  searchItemRegex.test(person.name))\n\n\n  const deleteContact = (id,name) => {\n    const updatedPhonebook = persons.filter(person => person.id!==id)\n    if(window.confirm(`Do you want to delete contact ${name} ??`)){\n      phoneService\n        .deleteIt(id)\n        .then(returnedPhonebook => {\n          setPersons(updatedPhonebook)\n          setErrorMessage(\"Contact deleted\")\n          setTimeout(() => setErrorMessage(null),5000)\n        })\n        .catch(error => {\n          setErrorMessage(\"Sorry!! This Contact does not exists in server anymore.\")\n          setPersons(updatedPhonebook)\n          setTimeout(() => setErrorMessage(null),5000)\n        })\n    }}\n\n  const rows = () => phonebookToShow.map(person =>\n      <Person\n        key={person.name}\n        name={person.name}\n        number={person.number}\n        id = {person.id}\n        deleteContact = {deleteContact}\n      />\n  )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {errorMessage} setErrorMessage = {setErrorMessage} />\n      <PersonForm\n        newName={newName} setNewName={setNewName}\n        newNumber={newNumber} setNewNumber = {setNewNumber}\n        persons = {persons} setPersons={setPersons}\n        setErrorMessage = {setErrorMessage} />\n\n      <Filter\n        showAll={showAll} setShowAll={setShowAll}\n        searchName={searchName} setSearchName={setSearchName}\n        searchItemRegex={searchItemRegex} setSearchItemRegex={setSearchItemRegex} />\n\n      <div>\n          {loaded ? rows() : ''}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}